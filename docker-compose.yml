version: '3.9'

volumes:
    vol-certs:

networks:
    alison-net:

services:

    reverse-proxy:
        depends_on:
            - db-api
            - db-etl
            - server-api
            - server-etl
            - server-gql
            - web-app
            - web-cms
            - web-etl
        image: nginx:latest
        container_name: reverse-proxy
        hostname: reverse-proxy
        networks: 
            alison-net:
        ports:
            - 80:80
        environment:
            - NGINX_HOST=reverse-proxy
            - NGINX_PORT=80
            # APPLICATION_URL: http://alison.local
        volumes:
            - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
            # - ./reverse-proxy/error.log:/etc/nginx/error_log.log
            # - vol-certs/:/etc/letsencrypt/


    db-api:
        image: mysql/mysql-server
        container_name: db-api
        hostname: db-api
        networks:
            alison-net:
        # ports:
        #     - 3306:3306
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: api
            MYSQL_PASSWORD: api
            MYSQL_DATABASE: api
            # - MYSQL_MAX_ALLOWED_PACKET=1024M
            # - MYSQL_INNODB_BUFFER_POOL_SIZE=1G
            # - MYSQL_INNODB_LOG_FILE_SIZE=256M
            # - MYSQL_INNODB_LOG_BUFFER_SIZE=256M
        volumes:
            - ./db-api/data:/var/lib/mysql

    db-etl:
        image: mysql/mysql-server
        container_name: db-etl
        hostname: db-etl
        networks:
            alison-net:
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: etl
            MYSQL_PASSWORD: etl
            MYSQL_DATABASE: etl
            # - MYSQL_MAX_ALLOWED_PACKET=1024M
            # - MYSQL_INNODB_BUFFER_POOL_SIZE=1G
            # - MYSQL_INNODB_LOG_FILE_SIZE=256M
            # - MYSQL_INNODB_LOG_BUFFER_SIZE=256M
        # ports:
        #     - 3306:3306
        volumes:
            - ./db-etl/data:/var/lib/mysql


    server-api:
        depends_on:
            - db-api
        image: trozdol/server-api
        container_name: server-api
        hostname: server-api
        networks:
            alison-net:
        # ports:
        #     - 80:80        
        environment:
            NODE_ENV: dev
            PORT: 80
        build:
            labels:
                com.trozlabs.alison.api: "Alison API"
            context: ./server-api
            dockerfile: ./Dockerfile
        volumes:
            - ./server-api:/usr/src/app

    server-etl:
        image: trozdol/server-etl
        container_name: server-etl
        hostname: server-etl
        networks: 
            alison-net:
        # ports:
        #     - 80:80
        environment:
            NODE_ENV: dev
            PORT: 80
        build:
            labels: 
                com.trozlabs.alison.etl: "Alison ETL"
            context: ./server-etl
            dockerfile: ./Dockerfile
        volumes:
            - ./server-etl:/usr/src/app

    server-gql:
        image: trozdol/server-gql
        container_name: server-gql
        hostname: server-gql
        networks:
            alison-net:
                # ipv4_address: 172.18.0.5
                # aliases:
                #     - gql.alison
                #     - gql.alison.trozlabs.com
        # ports:
        #     - 80:80        
        environment:
            NODE_ENV: dev
            PORT: 80
        build:
            labels: 
                com.trozlabs.alison.gql: "Alison GQL"
            context: ./server-gql
            dockerfile: ./Dockerfile
        volumes:
            - ./server-gql:/usr/src/app


    web-app:
        image: nginx:latest
        container_name: web-app
        hostname: web-app
        networks:
            alison-net:
        # ports:
        #     - 80:80        
        command: [nginx-debug, '-g', 'daemon off;']
        environment:
            - NGINX_HOST=web-app
            - NGINX_PORT=80
        volumes:
            # - ./web-app/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./web-app:/usr/share/nginx/html

    web-cms:
        image: nginx:latest
        container_name: web-cms
        hostname: web-cms
        networks:
            alison-net:
        # ports:
        #     - 80:80    
        command: [nginx-debug, '-g', 'daemon off;']
        environment:
            - NGINX_HOST=web-cms
            - NGINX_PORT=80
        volumes:
            # - ./web-cms/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./web-cms:/usr/share/nginx/html

    web-etl:
        image: nginx:latest
        container_name: web-etl
        hostname: web-etl
        networks:
            alison-net:
        # ports:
        #     - 80:80    
        command: [nginx-debug, '-g', 'daemon off;']
        environment:
            - NGINX_HOST=web-etl
            - NGINX_PORT=80
        volumes:
            # - ./web-etl/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./web-etl:/usr/share/nginx/html
