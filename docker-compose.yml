version: '3.9'

networks:
    alison-net:

volumes:
    vol-certs:
    vol-db-api:
    vol-db-etl:

services:

    # 
    # LOAD BALANCER:
    # Maps public facing hostnames to internal hostnames/services. 
    # This container will be the last to start so internal dns hostnames will resolve.
    # 

    reverse-proxy:
        depends_on:
            - db-api
            - db-etl
            - server-api
            - server-etl
            - server-gql
            - server-strapi
            - web-app
            - web-cms
            - web-etl
        image: nginx:latest
        container_name: reverse-proxy
        hostname: reverse-proxy
        networks: 
            alison-net:
        ports:
            - 80:80
        environment:
            - NGINX_HOST=alison.test
            - NGINX_PORT=80
        restart: always
        volumes:
            - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf

    #
    # DATABASE CONTAINERS:
    # One database per container. Maps external-hostname:44XX -> internal-hostname:3306
    #

    db-api:
        image: mysql/mysql-server
        container_name: db-api
        hostname: db-api
        networks:
            alison-net:
        ports:
            - 4400:3306
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: api
            MYSQL_PASSWORD: api
            MYSQL_DATABASE: api
        volumes:
            - vol-db-api:/var/lib/mysql

    db-etl:
        image: mysql/mysql-server
        container_name: db-etl
        hostname: db-etl
        networks:
            alison-net:
        ports:
            - 4401:3306
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: etl
            MYSQL_PASSWORD: etl
            MYSQL_DATABASE: etl
        volumes:
            - vol-db-etl:/var/lib/mysql

    #
    # API SERVER CONTAINERS:
    #

    server-api:
        depends_on:
            - db-api
        image: trozdol/server-api
        container_name: server-api
        hostname: server-api
        networks:
            alison-net:
        environment:
            NODE_ENV: dev
            PORT: 80
        restart: always
        build:
            labels:
                com.trozlabs.alison.api: "Alison API"
            context: ./server-api
            dockerfile: ./Dockerfile
        volumes:
            - ./server-api:/usr/src/app

    server-etl:
        depends_on:
            - db-etl
        image: trozdol/server-etl
        container_name: server-etl
        hostname: server-etl
        networks: 
            alison-net:
        environment:
            NODE_ENV: dev
            PORT: 80
        restart: always
        build:
            context: ./server-etl
            dockerfile: ./Dockerfile
        volumes:
            - ./server-etl:/usr/src/app

    server-gql:
        depends_on:
            - db-etl
        image: trozdol/server-gql
        container_name: server-gql
        hostname: server-gql
        networks:
            alison-net:
        environment:
            NODE_ENV: dev
            PORT: 80
        restart: always
        build:
            context: ./server-gql
            dockerfile: ./Dockerfile
        volumes:
            - ./server-gql:/usr/src/app

    server-strapi:
        depends_on:
            - db-api
        image: strapi/strapi
        container_name: server-strapi
        hostname: server-strapi
        networks:
            alison-net:
        restart: always
        environment:
            # APP_NAME: api.alison
            NODE_ENV: dev
            DATABASE_CLIENT: mysql
            DATABASE_HOST: db-api
            DATABASE_PORT: 3306
            DATABASE_NAME: api
            DATABASE_USERNAME: api
            DATABASE_PASSWORD: api
        volumes:
            - ./api.alison:/usr/src/app

    #
    # STATIC WEB CONTAINERS:
    #

    web-app:
        depends_on:
            - server-strapi
            - server-api
        image: nginx:latest
        container_name: web-app
        hostname: web-app
        networks:
            alison-net:
        command: [nginx-debug, '-g', 'daemon off;']
        environment:
            - NGINX_HOST=web-app
            - NGINX_PORT=80
        volumes:
            # - ./web-app/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./web-app:/usr/share/nginx/html

    web-cms:
        depends_on:
            - server-strapi
            - server-api
        image: nginx:latest
        container_name: web-cms
        hostname: web-cms
        networks:
            alison-net:
        command: [nginx-debug, '-g', 'daemon off;']
        environment:
            - NGINX_HOST=web-cms
            - NGINX_PORT=80
        volumes:
            # - ./web-cms/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./web-cms:/usr/share/nginx/html

    web-etl:
        depends_on:
            - server-etl
        image: nginx:latest
        container_name: web-etl
        hostname: web-etl
        networks:
            alison-net:
        command: [nginx-debug, '-g', 'daemon off;']
        environment:
            - NGINX_HOST=web-etl
            - NGINX_PORT=80
        volumes:
            # - ./web-etl/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./web-etl:/usr/share/nginx/html
